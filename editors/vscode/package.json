{
  "name": "soliditydefend",
  "displayName": "SolidityDefend",
  "description": "Advanced security analysis for Solidity smart contracts",
  "version": "0.1.0",
  "publisher": "soliditydefend",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/soliditydefend/soliditydefend"
  },
  "bugs": {
    "url": "https://github.com/soliditydefend/soliditydefend/issues"
  },
  "homepage": "https://soliditydefend.com",
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=16.0.0"
  },
  "categories": [
    "Linters",
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "solidity",
    "security",
    "smart contracts",
    "blockchain",
    "ethereum",
    "vulnerability detection",
    "static analysis"
  ],
  "activationEvents": [
    "onLanguage:solidity"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "solidity",
        "aliases": ["Solidity", "solidity"],
        "extensions": [".sol"],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "solidity",
        "scopeName": "source.solidity",
        "path": "./syntaxes/solidity.tmGrammar.json"
      }
    ],
    "commands": [
      {
        "command": "soliditydefend.analyze",
        "title": "Analyze Current File",
        "category": "SolidityDefend",
        "icon": "$(search)"
      },
      {
        "command": "soliditydefend.analyzeWorkspace",
        "title": "Analyze Entire Workspace",
        "category": "SolidityDefend",
        "icon": "$(folder-library)"
      },
      {
        "command": "soliditydefend.clearDiagnostics",
        "title": "Clear Diagnostics",
        "category": "SolidityDefend",
        "icon": "$(clear-all)"
      },
      {
        "command": "soliditydefend.openSecurityReport",
        "title": "Open Security Report",
        "category": "SolidityDefend",
        "icon": "$(report)"
      },
      {
        "command": "soliditydefend.exportResults",
        "title": "Export Analysis Results",
        "category": "SolidityDefend",
        "icon": "$(export)"
      },
      {
        "command": "soliditydefend.showVulnerabilityInfo",
        "title": "Show Vulnerability Information",
        "category": "SolidityDefend",
        "icon": "$(info)"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "soliditydefend.analyze",
          "when": "resourceExtname == .sol",
          "group": "soliditydefend"
        }
      ],
      "editor/context": [
        {
          "command": "soliditydefend.analyze",
          "when": "editorLangId == solidity",
          "group": "soliditydefend"
        },
        {
          "command": "soliditydefend.showVulnerabilityInfo",
          "when": "editorLangId == solidity && soliditydefend.hasVulnerability",
          "group": "soliditydefend"
        }
      ],
      "commandPalette": [
        {
          "command": "soliditydefend.analyze",
          "when": "editorLangId == solidity"
        },
        {
          "command": "soliditydefend.analyzeWorkspace"
        }
      ]
    },
    "configuration": {
      "title": "SolidityDefend",
      "properties": {
        "soliditydefend.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable SolidityDefend analysis"
        },
        "soliditydefend.realTimeAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time analysis as you type"
        },
        "soliditydefend.analysisDelay": {
          "type": "number",
          "default": 500,
          "minimum": 100,
          "maximum": 5000,
          "description": "Delay in milliseconds before triggering analysis"
        },
        "soliditydefend.maxDiagnostics": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 1000,
          "description": "Maximum number of diagnostics to show per file"
        },
        "soliditydefend.enabledDetectors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "reentrancy",
              "missing-access-control",
              "dangerous-selfdestruct",
              "unchecked-return-value",
              "integer-overflow",
              "timestamp-dependence",
              "tx-origin",
              "delegatecall",
              "uninitialized-state",
              "weak-randomness"
            ]
          },
          "default": [
            "reentrancy",
            "missing-access-control",
            "dangerous-selfdestruct",
            "unchecked-return-value"
          ],
          "description": "List of enabled security detectors"
        },
        "soliditydefend.severityFilter": {
          "type": "string",
          "enum": ["critical", "high", "medium", "low", "info"],
          "default": "medium",
          "description": "Minimum severity level to show diagnostics"
        },
        "soliditydefend.showSecurityInfo": {
          "type": "boolean",
          "default": true,
          "description": "Show security information in hover tooltips"
        },
        "soliditydefend.showCodeExamples": {
          "type": "boolean",
          "default": true,
          "description": "Show code examples in hover tooltips"
        },
        "soliditydefend.enableQuickFixes": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic quick fixes for common vulnerabilities"
        },
        "soliditydefend.excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": ["**/node_modules/**", "**/test/**", "**/tests/**"],
          "description": "File patterns to exclude from analysis"
        },
        "soliditydefend.server.path": {
          "type": "string",
          "default": "",
          "description": "Path to SolidityDefend LSP server binary (leave empty for auto-detection)"
        },
        "soliditydefend.server.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments for the LSP server"
        },
        "soliditydefend.trace.server": {
          "type": "string",
          "enum": ["off", "messages", "verbose"],
          "default": "off",
          "description": "Trace communication between VS Code and the LSP server"
        }
      }
    },
    "problemMatchers": [
      {
        "name": "soliditydefend",
        "owner": "soliditydefend",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning|info):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "taskDefinitions": [
      {
        "type": "soliditydefend",
        "required": ["task"],
        "properties": {
          "task": {
            "type": "string",
            "description": "The SolidityDefend task to execute"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/node": "^16.18.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.15.0"
  },
  "dependencies": {
    "vscode-languageclient": "^8.1.0",
    "vscode-languageserver-protocol": "^3.17.0"
  },
  "extensionDependencies": [],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  }
}